#!/usr/bin/env node

import { execSync } from 'child_process';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import { existsSync } from 'fs';

// Get the directory of this file
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Check if Bun is available
function hasBun() {
  try {
    execSync('bun --version', { stdio: 'ignore' });
    return true;
  } catch {
    return false;
  }
}

// Get the source file path
const srcPath = join(__dirname, '..', 'src', 'index.ts');
const distPath = join(__dirname, '..', 'dist', 'index.js');

// If Bun is available and the TypeScript source exists, use Bun
if (hasBun() && existsSync(srcPath)) {
  // Run with Bun for better performance and direct TypeScript execution
  execSync(`bun "${srcPath}"`, { 
    stdio: 'inherit',
    env: { ...process.env }
  });
} else if (existsSync(distPath)) {
  // Fallback to Node.js with the compiled JavaScript
  await import(distPath);
} else {
  console.error('Error: GEMS CLI files not found.');
  console.error('Please ensure the package is properly installed.');
  process.exit(1);
}